def keyPropFile = file("key.properties")
def hasKey = keyPropFile.canRead()

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$KOTLIN_VERSION"
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "com.vanniktech.android.junit.jacoco"

repositories {
    google()
}

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultConfig {
        applicationId "lt.neworld.randomdecision2"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode 4
        versionName "1.1.2"
    }

    signingConfigs {
        release {
            if (hasKey) {
                def prop = new Properties()
                prop.load(new FileInputStream(keyPropFile))

                storeFile file(prop['PATH'])
                keyAlias prop['ALIAS']
                storePassword prop['PSW']
                keyPassword prop['PSW']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (hasKey) {
                signingConfig signingConfigs.release
            }
        }
    }
    lintOptions {
        warning "InvalidPackage"
        abortOnError false
    }
    packagingOptions {
        exclude "META-INF/LICENSE"
    }
}

dependencies {
    implementation project(":shared")
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$KOTLIN_VERSION"
    implementation 'com.dropbox.core:dropbox-core-sdk:3.0.8'
    implementation 'io.reactivex:rxjava:1.3.8'
    implementation 'io.reactivex:rxandroid:1.2.1@aar'

    testImplementation "org.jetbrains.kotlin:kotlin-test:$KOTLIN_VERSION"
    testImplementation 'org.robolectric:robolectric:3.8'
    testImplementation 'junit:junit:4.12'
}

junitJacoco {
    jacocoVersion = '0.8.1'
    excludes = ['**/*$$*', '**/rx/android/**']
    includeNoLocationClasses = false // type boolean
}

//check.dependsOn jacocoTestReport
